
%start Source
%title "Sdc grammar"
%comment "Empty grammar generated by `parol`"
%auto_newline_off

%scanner BraceGroup {
    %auto_newline_off
    %auto_ws_off
}

%%

// ----------------------------------------------------------------------------
// Terminal
// ----------------------------------------------------------------------------

// Longest match should be first

TermLBracket                   : <INITIAL>'[';
TermRBracket                   : <INITIAL>']';

TermLBrace                     : <BraceGroup, INITIAL>'{';
TermRBrace                     : <BraceGroup, INITIAL>'}';

TermStringGroup                : <INITIAL>"\u{0022}(?:\\[\u{0022}\\/bfnrt]|u[0-9a-fA-F]{4}|[^\u{0022}\\])*\u{0022}";

TermComment                    : <INITIAL>/#.*(\r\n|\r|\n|$)/;
TermSemiColon                  : <INITIAL>';';
TermBackslashLineBreak         : <INITIAL>/\\(\r\n|\r|\n)/;
TermLineBreak                  : <INITIAL>/(\r\n|\r|\n|$)/;
TermWord                       : <INITIAL>/[^\s\[\]\\]+/;

TermBraceGroupContent          : <BraceGroup>/[^}]*/;
TermBraceGroup                 : TermLBrace %push(BraceGroup) (TermBraceGroup | TermBraceGroupContent) TermRBrace %pop();

// ----------------------------------------------------------------------------
// Token
// ----------------------------------------------------------------------------

TokenEnd: TermLineBreak | TermSemiColon;

TokenBraceGroup : TermBraceGroup  [ TermBackslashLineBreak ];
TokenStringGroup: TermStringGroup [ TermBackslashLineBreak ];
TokenLBracket   : TermLBracket    [ TermBackslashLineBreak ];
TokenRBracket   : TermRBracket    [ TermBackslashLineBreak ];
TokenWord       : TermWord        [ TermBackslashLineBreak ];

// ----------------------------------------------------------------------------
// Source
// ----------------------------------------------------------------------------

Argument: TokenWord | TokenStringGroup | TokenBraceGroup | CommandReplacement;

CommandReplacement: TokenLBracket Command TokenRBracket;

Command: TokenWord { Argument };

CommandLine: Command TokenEnd;

Source: { CommandLine | TokenEnd | TermComment };
